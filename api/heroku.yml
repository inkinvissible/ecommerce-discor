# Define cómo se construye tu aplicación.
build:
  docker:
    # Apunta a la carpeta que contiene tu Dockerfile de producción.
    web: Dockerfile
  # (Opcional) Configuración de variables de entorno para el tiempo de construcción.
  # config:
  #   RAILS_ENV: "production"

# Define los comandos a ejecutar ANTES de que una nueva versión sea lanzada.
# ¡Perfecto para migraciones de base de datos!
release:
  image: web
  command:
    # Ejecuta las migraciones de Prisma de forma segura para producción.
    - npx prisma migrate deploy

# Define los procesos que correrán tu aplicación.
run:
  # El 'web dyno' principal que responderá a las peticiones HTTP.
  web: npm start
  # El comando de arriba puede ser el mismo que el CMD de tu Dockerfile de producción.

  # (Opcional) El worker dyno para tu cron job de sincronización.
  # worker: node src/infrastructure/jobs/sync.job.js
